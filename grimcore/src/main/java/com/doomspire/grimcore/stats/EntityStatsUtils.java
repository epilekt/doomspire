package com.doomspire.grimcore.stats;

import net.minecraft.world.entity.LivingEntity;
import net.minecraft.world.entity.player.Player;

public class EntityStatsUtils {

    /**
     * ‚úÖ –†–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–¥–æ—Ä–æ–≤—å—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Å—Ç–∞—Ç–æ–≤.
     * (–Ω–∞–ø—Ä–∏–º–µ—Ä, healthRegen —É –∏–≥—Ä–æ–∫–∞)
     */
    public static void applyRegen(LivingEntity entity) {
        if (entity instanceof Player player) {
            PlayerStats stats = PlayerStatsProvider.get(player);
            if (stats == null) return;

            applyRegen(player, stats.healthRegen());
        } else {
            MobStats stats = MobStatsProvider.get(entity);
            if (stats == null) return;

            int baseRegen = 1; // üîπ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π —Ä–µ–≥–µ–Ω –¥–ª—è –º–æ–±–æ–≤ (–º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –ø–æ–∑–∂–µ)
            applyRegen(entity, baseRegen);
        }
    }

    /**
     * ‚úÖ –†–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–¥–æ—Ä–æ–≤—å—è —Å –∑–∞–¥–∞–Ω–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º (–∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è).
     * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–∏—Å—Ç–µ–º–æ–π —Ç–∏–∫-—Ä–µ–≥–µ–Ω–∞, –±–∞—Ñ—Ñ–∞–º–∏ –∏–ª–∏ –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏.
     */
    public static void applyRegen(LivingEntity entity, int amount) {
        if (amount <= 0) return;

        if (entity instanceof Player player) {
            PlayerStats stats = PlayerStatsProvider.get(player);
            if (stats == null) return;

            if (stats.health() < stats.maxHealth()) {
                int newHealth = Math.min(stats.maxHealth(), stats.health() + amount);
                PlayerStatsProvider.set(player, new PlayerStats(
                        newHealth,
                        stats.mana(),
                        stats.maxHealth(),
                        stats.maxMana(),
                        stats.healthRegen(),
                        stats.manaRegen()
                ));
            }
        } else {
            MobStats stats = MobStatsProvider.get(entity);
            if (stats == null) return;

            if (stats.getCurrentHealth() < stats.getMaxHealth()) {
                int newHealth = Math.min(stats.getMaxHealth(), stats.getCurrentHealth() + amount);
                MobStatsProvider.set(entity, new MobStats(stats.getMaxHealth(), newHealth));
            }
        }
    }

    /**
     * ‚úÖ –†–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –º–∞–Ω—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Å—Ç–∞—Ç–æ–≤ –∏–≥—Ä–æ–∫–∞.
     */
    public static void applyManaRegen(Player player) {
        PlayerStats stats = PlayerStatsProvider.get(player);
        if (stats == null) return;

        applyManaRegen(player, stats.manaRegen());
    }

    /**
     * ‚úÖ –†–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –º–∞–Ω—ã —Å –∑–∞–¥–∞–Ω–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º.
     */
    public static void applyManaRegen(Player player, int amount) {
        if (amount <= 0) return;

        PlayerStats stats = PlayerStatsProvider.get(player);
        if (stats == null) return;

        if (stats.mana() < stats.maxMana()) {
            int newMana = Math.min(stats.maxMana(), stats.mana() + amount);
            PlayerStatsProvider.set(player, new PlayerStats(
                    stats.health(),
                    newMana,
                    stats.maxHealth(),
                    stats.maxMana(),
                    stats.healthRegen(),
                    stats.manaRegen()
            ));
        }
    }
}

